import * as  __HMR__ from '/_hmr_client.js?namespace=hmr-client'; import.meta.hot = __HMR__.createHotContext(import.meta.url); var _s = $RefreshSig$();
const __this_path__ = "vitro-virtual-index.jsx";
import RefreshRuntime from "/_react-refresh-runtime_.js?namespace=react-refresh-runtime";
let prevRefreshReg;
let prevRefreshSig;
if (!window.__bundless_plugin_react_preamble_installed__) {
  throw new Error("bundless-plugin-react can't detect preamble. Something is wrong.");
}
if (import.meta.hot) {
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, __this_path__ + " " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
import "/__..__/packages/cli/reexports/inspect-mode.css.cssjs?namespace=file&t=0";
import "/__..__/packages/cli/reexports/inspector.css.cssjs?namespace=file&t=0";
import {ExperimentPage, HomePage, VitroApp, history, useRouteChanged, getFileParam} from "/__..__/packages/cli/reexports/ui.js?namespace=file&t=0";
import path from "/path?namespace=node-builtins";
import react_cjsImport6 from "/.bundless/web_modules/index-6FKCBOBS.js?namespace=file&t=0"; const React = react_cjsImport6 && react_cjsImport6.__esModule ? react_cjsImport6.default : react_cjsImport6; const useState = react_cjsImport6["useState"]; const useEffect = react_cjsImport6["useEffect"];;
import reactDom_cjsImport7 from "/.bundless/web_modules/index-J6P6F3TG.js?namespace=file&t=0"; const ReactDOM = reactDom_cjsImport7 && reactDom_cjsImport7.__esModule ? reactDom_cjsImport7.default : reactDom_cjsImport7;;
import experimentsTree from "/vitro-experiments-tree.js?namespace=file&t=0";
const __ROOT__ = "/Users/morse/Documents/GitHub/react-comics/examples";
const __ROUTES__ = [{
  fileExports: () => import('/markdown/src/docs-macro.vitro.jsx?namespace=file&t=0'),
  url: "/?file=markdown%2Fsrc%2Fdocs-macro.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/markdown/src/docs-macro.vitro.jsx"
}, {
  fileExports: () => import('/styled-components/src/big-height.vitro.jsx?namespace=file&t=0'),
  url: "/?file=styled-components%2Fsrc%2Fbig-height.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/styled-components/src/big-height.vitro.jsx"
}, {
  fileExports: () => import('/styled-components/src/big-width.vitro.jsx?namespace=file&t=0'),
  url: "/?file=styled-components%2Fsrc%2Fbig-width.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/styled-components/src/big-width.vitro.jsx"
}, {
  fileExports: () => import('/styled-components/src/example-styled-components.vitro.jsx?namespace=file&t=0'),
  url: "/?file=styled-components%2Fsrc%2Fexample-styled-components.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/styled-components/src/example-styled-components.vitro.jsx"
}, {
  fileExports: () => import('/styled-components/src/many-components.vitro.jsx?namespace=file&t=0'),
  url: "/?file=styled-components%2Fsrc%2Fmany-components.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/styled-components/src/many-components.vitro.jsx"
}, {
  fileExports: () => import('/tailwind/src/example-tailwind.vitro.jsx?namespace=file&t=0'),
  url: "/?file=tailwind%2Fsrc%2Fexample-tailwind.vitro.jsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/tailwind/src/example-tailwind.vitro.jsx"
}, {
  fileExports: () => import('/example-package-scope/example-sub-package-1/src/index.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package-scope%2Fexample-sub-package-1%2Fsrc%2Findex.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package-scope/example-sub-package-1/src/index.vitro.tsx"
}, {
  fileExports: () => import('/example-package-scope/example-sub-package-2/src/index.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package-scope%2Fexample-sub-package-2%2Fsrc%2Findex.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package-scope/example-sub-package-2/src/index.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/anAwesomeExperiment.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2FanAwesomeExperiment.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/anAwesomeExperiment.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/anotherExperiment.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2FanotherExperiment.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/anotherExperiment.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/anotherExperiment1.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2FanotherExperiment1.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/anotherExperiment1.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/check-sourcemaps-work.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2Fcheck-sourcemaps-work.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/check-sourcemaps-work.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/complex-components.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2Fcomplex-components.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/complex-components.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/example_component.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2Fexample_component.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/example_component.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/experiment1.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2Fexperiment1.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/experiment1.vitro.tsx"
}, {
  fileExports: () => import('/example-package/src/stillAnotherExperiment.vitro.tsx?namespace=file&t=0'),
  url: "/?file=example-package%2Fsrc%2FstillAnotherExperiment.vitro.tsx",
  sourceExperimentPath: "/Users/morse/Documents/GitHub/react-comics/examples/example-package/src/stillAnotherExperiment.vitro.tsx"
}];
const __OVERRIDES__ = {
  "/Users/morse/Documents/GitHub/react-comics/examples/example-package-scope/example-sub-package-2": () => import('/example-package-scope/example-sub-package-2/vitro-overrides.jsx?namespace=file&t=0'),
  "/Users/morse/Documents/GitHub/react-comics/examples/example-package": () => import('/example-package/vitro-overrides.jsx?namespace=file&t=0')
};
const __CONFIG__ = JSON.parse(`{
    "globs": [
        "./**/*.vitro.js",
        "./**/*.vitro.jsx",
        "./**/*.vitro.tsx"
    ],
    "bundlessConfig": {
        "prebundle": {}
    },
    "ignore": [
        "__mirror__/**"
    ],
    "links": {
        "github": {
            "url": "https://github.com/remorses/vitro",
            "path": "examples",
            "branch": "master"
        }
    }
}`);
const routes = __ROUTES__.filter((x) => x.url).map(({
  fileExports,
  url,
  sourceExperimentPath
}) => {
  const componentsOverridesScope = Object.keys(__OVERRIDES__).find((scopeDir) => {
    const isInside = !path.relative(scopeDir, sourceExperimentPath).startsWith("..");
    if (isInside) {
      return true;
    }
    return false;
  });
  const overrides = __OVERRIDES__[componentsOverridesScope];
  return {
    url,
    param: getFileParam(url),
    Component: () => {
      return /* @__PURE__ */ React.createElement(ExperimentPage, {
        config: __CONFIG__,
        root: __ROOT__,
        componentsOverrides: overrides,
        experimentsTree,
        sourceExperimentPath,
        fileExports,
        "data-vitro-line": 168,
        "data-vitro-filename": "/Users/morse/Documents/GitHub/react-comics/examples/vitro-virtual-index.jsx"
      });
    }
  };
});
function MainApp() {
  _s();
  const [fileParam, setFileParam] = useState(() => getFileParam(window.location.href));
  useRouteChanged(() => {
    setFileParam(getFileParam(window.location.href));
  });
  if (!fileParam) {
    return /* @__PURE__ */ React.createElement(VitroApp, {
      experimentsTree,
      "data-vitro-line": 190,
      "data-vitro-filename": "/Users/morse/Documents/GitHub/react-comics/examples/vitro-virtual-index.jsx"
    }, /* @__PURE__ */ React.createElement(HomePage, {
      experimentsTree
    }));
  }
  const route = routes.find((route2) => {
    return route2.param === fileParam;
  });
  if (!route) {
    return /* @__PURE__ */ React.createElement(VitroApp, {
      experimentsTree,
      "data-vitro-line": 201,
      "data-vitro-filename": "/Users/morse/Documents/GitHub/react-comics/examples/vitro-virtual-index.jsx"
    });
  }
  return /* @__PURE__ */ React.createElement(VitroApp, {
    experimentsTree,
    "data-vitro-line": 204,
    "data-vitro-filename": "/Users/morse/Documents/GitHub/react-comics/examples/vitro-virtual-index.jsx"
  }, /* @__PURE__ */ React.createElement(route.Component, null));
}
_s(MainApp, "Dqtzev7OhbScSgaEHmRuk5CaoYo=", false, function() {
  return [useRouteChanged];
});
_c = MainApp;
ReactDOM.render(/* @__PURE__ */ React.createElement(MainApp, {
  "data-vitro-line": 210,
  "data-vitro-filename": "/Users/morse/Documents/GitHub/react-comics/examples/vitro-virtual-index.jsx"
}), document.getElementById("root"));
var _c;
$RefreshReg$(_c, "MainApp");
if (import.meta.hot) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
  import.meta.hot.accept();
  if (!window.__bundless_plugin_react_timeout) {
    window.__bundless_plugin_react_timeout = setTimeout(() => {
      window.__bundless_plugin_react_timeout = 0;
      RefreshRuntime.performReactRefresh();
    }, 30);
  }
}

//# sourceMappingURL=data:application/json;base64,